services:
    app:
        image: 68publishers/php:8.3-unit-dev-1.0.0
        user: "www-data:www-data"
        container_name: cmp-app
        profiles:
            - web
        ports:
            - "8888:8080"
        networks:
            - backend
        volumes:
            - .:/var/www/html:cached
        depends_on:
            redis:
                condition: service_started
            db:
                condition: service_healthy

    worker:
        build:
            context: .
            dockerfile: Dockerfile
            target: worker
        container_name: cmp-worker
        user: "www-data:www-data"
        profiles:
            - worker
        networks:
            - backend
        volumes:
            - .:/var/www/html:cached
        depends_on:
            redis:
                condition: service_started
            db:
                condition: service_healthy

    db:
        image: postgres:13.6-alpine
        container_name: cmp-db
        profiles:
            - web
            - worker
        shm_size: 256m
        ports:
            - "5432:5432"
        networks:
            - backend
        volumes:
            - ./docker/postgres/postgres.conf:/etc/postgresql/postgresql.conf:delegated
            - ./var/postgres-data:/var/lib/postgresql/data:cached
        environment:
            - PGDATA=/var/lib/postgresql/data/pgdata
            - POSTGRES_USER=root
            - POSTGRES_PASSWORD=root
            - POSTGRES_DB=cmp
        command:
          - postgres
          - -c
          - 'config_file=/etc/postgresql/postgresql.conf'
        healthcheck:
            test: ["CMD-SHELL", "sh -c 'pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB'"]
            interval: 10s
            timeout: 5s
            retries: 5

    redis:
        image: redis:7.0.10-alpine
        container_name: cmp-redis
        profiles:
            - web
            - worker
        command: redis-server --requirepass redis_pass
        ports:
            - "6379:6379"
        networks:
            - backend
networks:
    backend:
