<?php

declare(strict_types=1);

namespace App\Domain\CookieProvider;

use App\Domain\Shared\ValueObject\Locale;
use App\Domain\CookieProvider\ValueObject\Purpose;

final class CookieProviderTranslation
{
	# autogenerated
	private string $id;

	private CookieProvider $cookieProvider;

	private Locale $locale;

	private Purpose $purpose;

	private function __construct()
	{
	}

	/**
	 * @param \App\Domain\CookieProvider\CookieProvider      $cookieProvider
	 * @param \App\Domain\Shared\ValueObject\Locale          $locale
	 * @param \App\Domain\CookieProvider\ValueObject\Purpose $purpose
	 *
	 * @return static
	 */
	public static function create(CookieProvider $cookieProvider, Locale $locale, Purpose $purpose): self
	{
		$cookieProviderTranslation = new self();
		$cookieProviderTranslation->cookieProvider = $cookieProvider;
		$cookieProviderTranslation->locale = $locale;
		$cookieProviderTranslation->purpose = $purpose;

		return $cookieProviderTranslation;
	}

	/**
	 * @return \App\Domain\CookieProvider\CookieProvider
	 */
	public function cookieProvider(): CookieProvider
	{
		return $this->cookieProvider;
	}

	/**
	 * @return \App\Domain\Shared\ValueObject\Locale
	 */
	public function locale(): Locale
	{
		return $this->locale;
	}

	/**
	 * @return \App\Domain\CookieProvider\ValueObject\Purpose
	 */
	public function purpose(): Purpose
	{
		return $this->purpose;
	}

	/**
	 * @param \App\Domain\CookieProvider\ValueObject\Purpose $purpose
	 *
	 * @return void
	 */
	public function setPurpose(Purpose $purpose): void
	{
		$this->purpose = $purpose;
	}
}
