{define #form-body}
    <div class="space-y-6 py-6">
        {foreach $form->getGroups() as $group}
            {include #group, group => $group, groupsIterator => $iterator}
        {/foreach}
        {include #controls, group => $form}
    </div>
{/define}

{define #form-errors}
    <div n:if="$form->getOwnErrors()" class="space-x-2 mb-4">
        <div n:foreach="$form->getOwnErrors() as $error" class="rounded-md bg-red-50 p-4">
            <div class="flex">
                <div class="flex-shrink-0">
                    {svg common/x-circle-solid.svg, class: 'h-5 w-5 text-red-400'}
                </div>
                <div class="ml-3">
                    <h3 class="text-sm font-medium text-red-800">{$error}</h3>
                </div>
            </div>
        </div>
    </div>
{/define}

{define #controls}
    {try}
        {var $controls = $group instanceof Nette\Forms\Container ? $group->getComponents() : $group->getControls()}

        {foreach $controls as $control}
            {if $control instanceof Nette\Forms\Control}
                {continueIf $control->getOption('rendered') || $control->getOption('type') === 'hidden'}
                {if $control instanceof Nette\Forms\Controls\CheckboxList && 'checkbox' === $control->getOption('type')}
                    {do $control->setOption('type', 'checkboxlist')}
                {/if}

                {include #helpers-override-split, blockNamePrefix => pair, control => $control, parameters => [controlsIterator => $iterator]}
            {elseif $control instanceof Nette\Forms\Container}
                {ifset #'container-name-' . $control->getName()}
                    {include #'container-name-' . $control->getName(), container => $control}
                {else}
                    {include #controls, group => $control}
                {/ifset}
            {/if}
            {else}{rollback}
        {/foreach}
    {/try}
{/define}

{define #pair-type-default}
    {var $forceVerticalLayout = $control->getOption('forceVerticalLayout') ?? false}

    <div n:class="!$forceVerticalLayout ? 'sm:grid sm:grid-cols-3 sm:gap-4 sm:items-start' : '', 'sm:border-b sm:border-gray-200 sm:pb-6 px-4 sm:px-6'" n:attr="id => $control->getOption('id')">
        {include #label, control => $control}

        <div n:class="'mt-1 h-full', !$forceVerticalLayout ? 'sm:mt-0 sm:col-span-2'">
            <div n:class="!$forceVerticalLayout ? 'max-w-lg' : '', 'h-full flex flex-col justify-center'">
                {include #helpers-override-split, blockNamePrefix => control, control => $control}
            </div>
        </div>
    </div>
{/define}

{define #pair-type-button}
    <div class="flex justify-end px-4 sm:px-6">
        {block #control-type-button}
            {if !$control->getOption('rendered')}
                {var $attrs = !$control->getOption('no-spinner') ? ['data-spinner-for' => $form->getElementPrototype()->id] : []}

                <button n:attr="(expand) $attrs" n:name="$control" n:class="
                    $control->getControlPrototype()->class,
                    'spinner-white ml-3 inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 cursor-pointer'
                ">{$control->translate($control->getCaption())}</button>
                {include #helpers-override-split, blockNamePrefix => help, control => $control}
            {/if}
            {if isset($controlsIterator) && !$controlsIterator->isLast() && $controlsIterator->getNextValue()->getOption('type') === 'button'}
                {php $controlsIterator->next()}
                {include #control-type-button, control => $controlsIterator->current(), controlsIterator => $controlsIterator}
            {/if}
        {/block}
    </div>
{/define}

{define #label}
    <div class="block sm:mt-px sm:pt-2">
        <label n:name="$control" n:class="
            $control->getLabelPrototype()->class,
            'block text-sm font-medium text-gray-700'
        " />
        {include #helpers-override-split, blockNamePrefix => help, control => $control}
    </div>
{/define}

{define #control-type-default}
    {include #helpers-override-split, blockNamePrefix => input, control => $control}
    {include #control-errors, control => $control}
{/define}

{define #control-type-checkboxlist}
    {include #helpers-override-split, blockNamePrefix => input, control => $control}
    {include #control-errors, control => $control}
{/define}

{define #control-type-radio}
    {include #control-type-checkboxlist, control => $control}
{/define}

{define #control-errors}
    <div n:foreach="$control->getErrors() as $error" class="text-red-500 text-xs pt-2">{$error}</div>
{/define}

{define #help-type-default}
    <small n:if="$control->getOption('description') !== null" class="block text-gray-600 text-xs py-2 max-w-lg">{$control->getOption('description')|safeTranslate}</small>
{/define}

{define #input-type-default}
    {input $control}
{/define}

{define #input-type-text}
    {if null === $control->getOption('clipboard')}
        <input n:name="$control" n:class="
            $control->getControlPrototype()->class,
            'shadow-sm focus:ring-indigo-500 focus:border-indigo-500 block w-full sm:text-sm border-gray-300 rounded-md disabled:bg-slate-50 disabled:text-slate-500 disabled:border-slate-200 disabled:shadow-none'
        ">
    {else}
        {var $clipboardAction = $control->isDisabled() ? 'copy' : $control->getOption('clipboard')}

        <div class="lfv-message-parent">
            <div class="flex flex-nowrap space-x-1">
                <input n:name="$control" n:class="
                    $control->getControlPrototype()->class,
                    'shadow-sm focus:ring-indigo-500 focus:border-indigo-500 block w-full sm:text-sm border-gray-300 rounded-md disabled:bg-slate-50 disabled:text-slate-500 disabled:border-slate-200 disabled:shadow-none'
                ">
                <button type="button"
                        class="relative -ml-px inline-flex items-center gap-x-1.5 rounded-md px-3 py-2 text-sm font-semibold text-gray-900 ring-1 ring-inset ring-gray-300 hover:bg-gray-50"
                        data-clipboard=""
                        data-clipboard-action="{$clipboardAction}"
                        data-clipboard-success-tooltip="{_'//layout.clipboard.success_' . $clipboardAction}"
                        data-clipboard-error-tooltip="{_'//layout.clipboard.error_' . $clipboardAction}"
                        n:attr="
                            'data-clipboard-text' => $control->isDisabled() ? $control->getValue() : null,
                            'data-clipboard-target' => $control->isDisabled() ? null : ('#' . $control->getHtmlId()),
                        ">
                    {svg 'common/document-duplicate.svg', class: 'h-5 w-5'}
                </button>
            </div>
        </div>
    {/if}
{/define}

{define #input-type-color-picker}
    {var $placement = $control->getOption('placement') ?? 'bottom'}

    <div class="lfv-message-parent flex flex-col justify-center h-10 w-10">
        <button x-data x-color-picker.placement.{$placement} type="button" class="inline-flex h-10 w-10 items-center justify-center rounded-full border border-gray-300 bg-white shadow-sm focus:ring-indigo-500 focus:border-indigo-500">
            <input n:name="$control->setHtmlType('hidden')">
        </button>
    </div>
{/define}

{define #input-type-file}
    <input n:name="$control" n:class="
        $control->getControlPrototype()->class,
        'block w-full text-sm text-gray-500 file:mr-4 file:py-2 file:px-4 file:rounded-full file:border-0 file:text-sm file:font-semibold file:bg-blue-100 file:text-blue-700 hover:file:bg-blue-200 cursor-pointer'
    ">
{/define}

{define #input-type-textarea}
    {var $codemirror = $control->getOption('codemirror')}

    <textarea n:name="$control" n:class="
        $control->getControlPrototype()->class,
        'shadow-sm focus:ring-indigo-500 focus:border-indigo-500 block w-full sm:text-sm border border-gray-300 rounded-md disabled:bg-slate-50 disabled:text-slate-500 disabled:border-slate-200 disabled:shadow-none',
        $codemirror ? 'codemirror-resize' : ''
    " x-data n:attr="'x-autosize' => !$codemirror, 'x-codemirror.linenumbers' => $codemirror"></textarea>
{/define}

{define #input-type-select}
    {var $searchbar = $control->getOption('searchbar')}
    {var $tags = $control->getOption('tags')}

    <select n:name="$control" n:class="
        $control->getControlPrototype()->class,
        'show-hidden-error block w-full py-2 px-3 border border-gray-300 bg-white rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm disabled:bg-slate-50 disabled:text-slate-500 disabled:border-slate-200 disabled:shadow-none'
    " x-data x-cloak n:attr="'x-select' => !$searchbar && !$tags, 'x-select.tags' => !$searchbar && $tags, 'x-select.searchbar' => $searchbar && !$tags, 'x-select.searchbar.tags' => $searchbar && $tags" />
{/define}

{define #input-type-range}
    <input n:name="$control" n:class="
        $control->getControlPrototype()->class,
        'shadow-sm focus:ring-indigo-500 focus:border-indigo-500 block w-full sm:text-sm border-gray-300 rounded-md disabled:bg-slate-50 disabled:text-slate-500 disabled:border-slate-200 disabled:shadow-none'
    ">
{/define}

{define #input-type-checkbox}
    <div n:class="$control->getSeparatorPrototype()->class, 'lfv-message-parent'">
        <div class="flex items-center h-5 w-full">
            <input n:name="$control:" n:class="
                $control->getControlPrototype()->class,
                'show-hidden-error focus:ring-indigo-500 h-4 w-4 text-indigo-600 border-gray-300 rounded disabled:bg-slate-50 disabled:text-slate-500 disabled:border-slate-200 disabled:shadow-none'
            " x-data x-toggle x-cloak>
        </div>
    </div>
{/define}

{define #input-type-checkboxlist}
    <div class="lfv-message-parent mt-3">
        <div n:foreach="$control->items as $k => $v" n:class="$control->getSeparatorPrototype()->class, 'flex items-start mb-3'">
            <div class="flex items-center h-5">
                <input n:name="$control:$k" n:class="
                    $control->getControlPrototype()->class,
                    'show-hidden-error focus:ring-indigo-500 h-4 w-4 text-indigo-600 border-gray-300 rounded disabled:bg-slate-50 disabled:text-slate-500 disabled:border-slate-200 disabled:shadow-none'
                " x-data x-toggle x-cloak>
            </div>
            <div class="ml-3 text-sm">
                <label n:name="$control:$k" n:class="
                    $control->getLabelPrototype()->class,
                    'font-medium text-gray-700'
                ">{=$control->translate($v)}</label>
            </div>
        </div>
    </div>
{/define}

{define #input-type-radio}
    <div class="lfv-message-parent mt-3">
        <div n:foreach="$control->items as $k => $v" n:class="$control->getSeparatorPrototype()->class, 'flex items-start mb-3'">
            <div class="flex items-center h-5">
                <input n:name="$control:$k" n:class="
                    $control->getControlPrototype()->class,
                    'focus:ring-indigo-500 h-4 w-4 text-indigo-600 border-gray-300 disabled:bg-slate-50 disabled:text-slate-500 disabled:border-slate-200 disabled:shadow-none'
                ">
            </div>
            <div class="ml-3 text-sm">
                <label n:name="$control:$k" n:class="
                    $control->getLabelPrototype()->class,
                    'ml-3 block text-sm font-medium text-gray-700'
                ">{=$control->translate($v)}</label>
            </div>
        </div>
    </div>
{/define}
