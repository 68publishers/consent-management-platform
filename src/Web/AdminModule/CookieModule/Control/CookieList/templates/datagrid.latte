{extends $originalTemplate}

{varType App\ReadModel\Cookie\CookieDataGridItem $item}
{varType App\Application\GlobalSettings\Locale|null $_locale}
{varType array $_acl}
{varType App\ReadModel\CookieProvider\CookieProviderSelectOptionView[]|null $providers}
{varType App\Domain\GlobalSettings\ValueObject\Environment[] $_environments}

{define col-name}
    <a n:tag-if="isset($_acl['resource'], $_acl['update']) && $user->isAllowed($_acl['resource'], $_acl['update'])" href="{$linkFactory('openModal!', ['editModal-' . Ramsey\Uuid\Uuid::fromString($item->id)->getHex()->toString()])}" data-spinner-for="self" class="ajax font-semibold">
        {$item->cookieName}
    </a>
{/define}

{define col-category_name}
    {if NULL !== $item->categoryName}
        {$item->categoryName}
    {else}
        -
    {/if}
{/define}

{define col-provider_name}
    <div class="inline-flex items-center">
        {$item->cookieProviderName}

        {if $item->cookieProviderPrivate}
            {svg common/folder-open.svg, class: 'w-5 h-5 text-indigo-600 ml-2'}
        {/if}
    </div>
{/define}

{define #filter-provider_name, $filter, $input, $outer}
    {var $htmlData = []}

    {foreach $input->items as $k => $v}
        {capture $html|spaceless}
            {var $private = isset($providers[$k]) && $providers[$k]->private}

            <span n:class="block, relative, $private ? 'pr-8' : ''">
                <span class="block truncate">{$v}</span>
                <span class="absolute inset-y-0 right-1 flex items-center">
                    {if $private}
                        {svg common/folder-open.svg, class: 'w-5 h-5 text-indigo-600 group-focus:text-white'}
                    {/if}
                </span>
            </span>
        {/capture}

        {do $htmlData[$k] = $html}
    {/foreach}

    {do $input->setOptionAttribute('data-html:', $htmlData)}
    {do $input->setOptionAttribute('data-selected-html:', $input->items)}

    {include #filtertype-multi-select, filter => $filter, input => $input, outer => $outer}
{/define}

{define col-provider_type}
    {_'//layout.cookie_provider_type.' . $item->cookieProviderType}
{/define}

{define col-projects}
    <div class="min-w-[150px]">
        {if !empty($item->projects)}
            {var $projects = $item->projects}
            {var $maxBadges = min([2, count($projects)])}

            <div class="whitespace-nowrap">
                {for $i = 0; $i < $maxBadges; $i++}
                    {var $project = array_shift($projects)}
                    <span class="inline-flex items-center px-2 py-0.5 rounded-md text-sm font-medium select-all" style="background: {$project->color|noescape} !important; color: {App\Web\Utils\Color::resolveFontColor($project->color)|noescape} !important;">
                        {$project->name}
                    </span>
                {/for}

                {if 0 < count($projects)}
                    {capture $tooltip}
                        <div>
                            <div n:foreach="$projects as $project" class="text-gray-800">
                                <span class="block text-center px-2 py-0.5 my-1.5 rounded-md text-sm font-medium select-all" style="background: {$project->color|noescape} !important; color: {App\Web\Utils\Color::resolveFontColor($project->color)|noescape} !important;">
                                    {$project->name}
                                </span>
                            </div>
                        </div>
                    {/capture}

                    {var $attrs = [
                        'x-data' => TRUE,
                        'x-tooltip.interactive.theme.light-border.placement.right.html.raw' => $tooltip
                    ]}

                    <span n:attr="$attrs">{_and_more_projects, count($projects)}</span>
                {/if}
            </div>
        {else}
            -
        {/if}
    </div>
{/define}

{define col-environments}
    <div class="min-w-[150px]">
        {if true === $item->environments}
            <span class="inline-flex items-center gap-x-1.5 rounded-md px-1 py-1 select-all">
                <svg class="h-1.5 w-1.5 fill-black" viewBox="0 0 6 6" aria-hidden="true">
                    <circle cx="3" cy="3" r="3" />
                </svg>
                {_//layout.all_environments}
            </span>
        {else}
            {var $environments = $item->environments}
            {var $maxBadges = min([2, count($environments)])}

            <div class="whitespace-nowrap flex items-center">
                {for $i = 0; $i < $maxBadges; $i++}
                    {include #environment-badge, environment: array_shift($environments), vertical: false}
                    <span n:if="$i !== ($maxBadges - 1)">,&nbsp;</span>
                {/for}

                {if 0 < count($environments)}
                    {capture $tooltip}
                        <div>
                            <div n:foreach="$environments as $environment" class="text-gray-800">
                                {include #environment-badge, environment: $environment, vertical: true}
                            </div>
                        </div>
                    {/capture}

                    {var $attrs = [
                        'x-data' => TRUE,
                        'x-tooltip.interactive.theme.light-border.placement.right.html.raw' => $tooltip
                    ]}

                    <span n:attr="$attrs">{_and_more_projects, count($environments)}</span>
                {/if}
            </div>
        {/if}
    </div>
{/define}

{define col-active}
    {if $item->active}
        <span class="inline-flex items-center px-2 py-0.5 rounded text-xs font-medium bg-green-100 text-green-800">{_active_value}</span>
    {else}
        <span class="inline-flex items-center px-2 py-0.5 rounded text-xs font-medium bg-gray-100 text-gray-800">{_inactive_value}</span>
    {/if}
{/define}

{define col-processing_time}
    {switch $item->processingTime}
        {case App\Domain\Cookie\ValueObject\ProcessingTime::PERSISTENT}
            {_persistent}
        {case App\Domain\Cookie\ValueObject\ProcessingTime::SESSION}
            {_session}
        {default}
            {App\Application\Helper\Estimate::fromMask($item->processingTime, $_locale->code(), 'en')}
    {/switch}
{/define}

{define #environment-badge, string $environment, bool $vertical = false}
    {if isset($_environments[$environment])}
        <span n:class="$vertical ? 'flex my-1.5' : 'inline-flex', 'items-center gap-x-1.5 rounded-md px-1 py-1 select-all'">
            <svg n:class="'h-1.5 w-1.5', $_environments[$environment]->color->isWhite() ? 'rounded border border-black' : ''" viewBox="0 0 6 6" aria-hidden="true" style="fill: {$_environments[$environment]->color->value()|noescape}">
                <circle cx="3" cy="3" r="3" />
            </svg>
            {$_environments[$environment]->name->value()}
        </span>
    {else}
        <span n:class="$vertical ? 'flex my-1.5' : 'inline-flex', 'items-center gap-x-1.5 rounded-md px-1 py-1 select-all'">
            <svg class="h-1.5 w-1.5 fill-white rounded border border-black" viewBox="0 0 6 6" aria-hidden="true">
                <circle cx="3" cy="3" r="3" />
            </svg>
            {$environment}
        </span>
    {/if}
{/define}
