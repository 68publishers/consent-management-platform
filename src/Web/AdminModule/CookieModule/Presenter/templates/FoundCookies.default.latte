{templateType App\Web\AdminModule\CookieModule\Presenter\FoundCookiesTemplate}

{block #page_title}{_page_title, [name => $projectView->name->value()]}{/block}

{block #heading_actions}
    <a n:if="$user->isAllowed(App\Application\Acl\CrawlerScenariosResource::class, App\Application\Acl\CrawlerScenariosResource::READ)" n:href='":Admin:Crawler:Scenarios:?scenarioList-grid-filter[project]={$projectView->id->toString()}"' data-spinner-for="self" class="spinner-white inline-flex items-center px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500">
        {svg common/queue-list.svg, class: 'h-4 w-4 mr-2'}
        {_running_scenarios}
    </a>
    <a n:if="$user->isAllowed(App\Application\Acl\FoundCookiesProjectsResource::class, App\Application\Acl\FoundCookiesProjectsResource::READ)" n:href="FoundCookiesProjects:" data-spinner-for="self" class="spinner-white inline-flex items-center px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
        {svg common/chevron-left.svg, class: 'h-4 w-4 mr-2'}
        {_back_to_list}
    </a>
{/block}

<div n:block="breadcrumbs" class="flex">
    <div class="flex place-items-center mb-1">
        <div id="project-select">
            <div x-data>
                <span x-init="$el.style.display = 'none'" class="inline-block w-auto px-2.5 py-0.5 rounded-md text-sm font-medium text-white mr-2" style="background-color: {$projectView->color->value()|noescape} !important;">
                    {$projectView->name->value()}
                </span>
            </div>
            <select x-data x-select.searchbar x-cloak x-on:change="window.location.href = $el.options[$el.selectedIndex].getAttribute('data-link')">
                {foreach $allProjects as $projectOption}
                    {capture $itemHtml}
                        <span class="inline-block w-auto px-2.5 py-0.5 rounded-md text-sm font-medium text-white mr-2" style="background-color: {$projectOption->color->value()|noescape} !important;">
                            {$projectOption->name->value()}
                        </span>
                    {/capture}

                    <option value="{$projectOption->code->value()}" data-link="{link FoundCookies:, id: $projectOption->id->toString()}" data-selected-html="{$itemHtml}" n:attr="selected => $projectOption->id->equals($projectView->id)">{$projectOption->name->value()}</option>
                {/foreach}
            </select>
        </div>
    </div>
</div>

{block #content}

<div class="bg-white shadow sm:rounded-lg">
    {* ===== NEW COOKIES ===== *}
    <div x-data="collapse" x-bind="collapse">
        <div x-bind="collapseButton" class="px-4 py-5 sm:px-6 border-b border-gray-200 flex items-center justify-between cursor-pointer">
            <h3 n:snippet="new-cookies-header" class="text-lg leading-6 font-medium text-gray-900 flex items-center">
                {svg 'common/plus-circle.svg', class: 'h-6 w-6 text-indigo-700 mr-3'}
                {_caption.new_cookies}
                <span class="inline-flex items-center px-2.5 py-0.5 ml-4 rounded-md text-sm font-medium bg-indigo-100 text-indigo-800">
                    {count($missingCookieSuggestions) + count($unassociatedCookieSuggestions)}
                </span>
            </h3>
            <span class="text-gray-600">
                {svg 'common/chevron-up.svg', class: 'w-5 h-5', x-show: 'expanded', x-cloak: true}
                {svg 'common/chevron-down.svg', class: 'w-5 h-5', x-show: '!expanded', x-cloak: true}
            </span>
        </div>

        <div x-bind="collapsePanel" n:attr="'x-cloak' => 0 >= (count($missingCookieSuggestions) + count($unassociatedCookieSuggestions))">
            <div n:snippet="new-cookies-panel" class="p-4 pb-6 border-b border-gray-200 divide-y divide-gray-150">
                {foreach $missingCookieSuggestions as $suggestion}
                    <div>
                        {include #missing-cookie-suggestion, suggestion: $suggestion}
                    </div>
                {/foreach}

                {foreach $unassociatedCookieSuggestions as $suggestion}
                    {include #unassociated-cookie-suggestion, suggestion: $suggestion}
                {/foreach}

                <div n:if="0 >= (count($missingCookieSuggestions) + count($unassociatedCookieSuggestions))" class="text-sm">
                    {_'no_found_cookie.new_cookies'}
                </div>
            </div>
        </div>
    </div>

    {* ===== PROBLEMATIC COOKIES ===== *}
    <div x-data="collapse" x-bind="collapse">
        <div x-bind="collapseButton" class="px-4 py-5 sm:px-6 border-b border-gray-200 flex items-center justify-between cursor-pointer">
            <h3 n:snippet="problematic-cookies-header" class="text-lg leading-6 font-medium text-gray-900 flex items-center">
                {svg 'common/exclamation-triangle.svg', class: 'h-6 w-6 text-red-700 mr-3'}
                {_caption.problematic_cookies}
                <span class="inline-flex items-center px-2.5 py-0.5 ml-4 rounded-md text-sm font-medium bg-red-100 text-red-800">
                    {count($problematicCookieSuggestions)}
                </span>
            </h3>
            <span class="text-gray-600">
                {svg 'common/chevron-up.svg', class: 'w-5 h-5', x-show: 'expanded', x-cloak: true}
                {svg 'common/chevron-down.svg', class: 'w-5 h-5', x-show: '!expanded', x-cloak: true}
            </span>
        </div>

        <div x-bind="collapsePanel" n:attr="'x-cloak' => 0 >= count($problematicCookieSuggestions)">
            <div n:snippet="problematic-cookies-panel" class="p-4 pb-6 border-b border-gray-200 divide-y divide-gray-150">
                {foreach $problematicCookieSuggestions as $suggestion}
                    {include #problematic-cookie-suggestion, suggestion: $suggestion}
                {/foreach}

                <div n:if="0 >= count($problematicCookieSuggestions)" class="text-sm">
                    {_'no_found_cookie.problematic_cookies'}
                </div>
            </div>
        </div>
    </div>

    {* ===== UNPROBLEMATIC COOKIES ===== *}
    <div x-data="collapse" x-bind="collapse">
        <div x-bind="collapseButton" class="px-4 py-5 sm:px-6 border-b border-gray-200 flex items-center justify-between cursor-pointer">
            <h3 n:snippet="unproblematic-cookies-header" class="text-lg leading-6 font-medium text-gray-900 flex items-center">
                {svg 'common/check-circle.svg', class: 'h-6 w-6 text-green-700 mr-3'}
                {_caption.unproblematic_cookies}
                <span class="inline-flex items-center px-2.5 py-0.5 ml-4 rounded-md text-sm font-medium bg-green-100 text-green-800">
                    {count($unproblematicCookieSuggestions)}
                </span>
            </h3>
            <span class="text-gray-600">
                {svg 'common/chevron-up.svg', class: 'w-5 h-5', x-show: 'expanded', x-cloak: true}
                {svg 'common/chevron-down.svg', class: 'w-5 h-5', x-show: '!expanded', x-cloak: true}
            </span>
        </div>

        <div x-bind="collapsePanel" n:attr="'x-cloak' => 0 >= count($unproblematicCookieSuggestions)">
            <div n:snippet="unproblematic-cookies-panel" class="p-4 pb-6 border-b border-gray-200 divide-y divide-gray-150">
                {foreach $unproblematicCookieSuggestions as $suggestion}
                    {include #unproblematic-cookie-suggestion, suggestion: $suggestion}
                {/foreach}

                <div n:if="0 >= count($unproblematicCookieSuggestions)" class="text-sm">
                    {_'no_found_cookie.unproblematic_cookies'}
                </div>
            </div>
        </div>
    </div>

    {* ===== IGNORED COOKIES ===== *}
    <div x-data="collapse" x-bind="collapse">
        <div x-bind="collapseButton" :class="expanded ? 'border-b' : ''" class="px-4 py-5 sm:px-6 border-gray-200 flex items-center justify-between cursor-pointer">
            <h3 n:snippet="ignored-cookies-header" class="text-lg leading-6 font-medium text-gray-900 flex items-center">
                {svg 'common/no-symbol.svg', class: 'h-6 w-6 text-gray-700 mr-3'}
                {_caption.ignored_cookies}
                <span class="inline-flex items-center px-2.5 py-0.5 ml-4 rounded-md text-sm font-medium bg-gray-100 text-gray-800">
                    {count($ignoredCookieSuggestions)}
                </span>
            </h3>
            <span class="text-gray-600">
                {svg 'common/chevron-up.svg', class: 'w-5 h-5', x-show: 'expanded', x-cloak: true}
                {svg 'common/chevron-down.svg', class: 'w-5 h-5', x-show: '!expanded', x-cloak: true}
            </span>
        </div>

        <div x-bind="collapsePanel" n:attr="'x-cloak' => 0 >= count($ignoredCookieSuggestions)">
            <div n:snippet="ignored-cookies-panel" class="p-4 pb-6 divide-y divide-gray-150">
                {foreach $ignoredCookieSuggestions as $suggestion}
                    {var $originalSuggestion = $suggestion->getOriginalSuggestion()}

                    {switch true}
                        {case $originalSuggestion instanceof App\Application\CookieSuggestion\Suggestion\MissingCookieSuggestion}
                            {include #missing-cookie-suggestion, suggestion: $originalSuggestion, solutions: $suggestion->getSolutions(), collapseStorageName: 'ignored'}
                        {case $originalSuggestion instanceof App\Application\CookieSuggestion\Suggestion\UnassociatedCookieSuggestion}
                            {include #unassociated-cookie-suggestion, suggestion: $originalSuggestion, solutions: $suggestion->getSolutions(), collapseStorageName: 'ignored'}
                        {case $originalSuggestion instanceof App\Application\CookieSuggestion\Suggestion\ProblematicCookieSuggestion}
                            {include #problematic-cookie-suggestion, suggestion: $originalSuggestion, solutions: $suggestion->getSolutions(), collapseStorageName: 'ignored'}
                    {/switch}
                {/foreach}

                <div n:if="0 >= count($ignoredCookieSuggestions)" class="text-sm">
                    {_'no_found_cookie.ignored_cookies'}
                </div>
            </div>
        </div>
    </div>
</div>

<div n:snippet="group-actions" class="flex flex-wrap items-center justify-end mt-4 mb-10 px-4 sm:px-0">
    <a n:if="0 < $totalNumberOfResolvableSuggestions && 0 < $totalNumberOfReadyToResolveSuggestions" n:href="resolveAll!" data-spinner-for="self" class="ajax spinner-white inline-flex items-center px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-green-600 hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500 mt-2">
        {svg 'common/check-circle.svg', class: 'h-5 w-5 text-white mr-2'}
        {_resolve_all_suggestions, [total: $totalNumberOfResolvableSuggestions, changed: $totalNumberOfReadyToResolveSuggestions]}
    </a>

    <a n:if="0 < $totalNumberOfResolvableSuggestions && 0 < $totalNumberOfReadyToResolveSuggestions" n:href="resetAll!" data-spinner-for="self" class="ajax spinner-white inline-flex items-center px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-red-600 hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500 mt-2 ml-2">
        {svg 'common/x-circle.svg', class: 'h-5 w-5 text-white mr-2'}
        {_reset_all_solutions, [total: $totalNumberOfResolvableSuggestions, changed: $totalNumberOfReadyToResolveSuggestions]}
    </a>
</div>

{define #missing-cookie-suggestion, $suggestion, $solutions = null, $collapseStorageName = 'missing'}
    <div x-data="collapse" x-bind="collapse" data-storage-name="suggestions-{$collapseStorageName}-{$projectView->id->toString()}" data-storage-key="{$suggestion->getSuggestionId()}" class="bg-white mb-2 text-sm px-2 py-4">
        {include #suggestion-header, suggestion: $suggestion, foundInCmp: false, solutions: $solutions ?? $suggestion->getSolutions()}

        <div x-bind="collapsePanel" x-cloak>
            {include #occurrences-table, suggestion: $suggestion}
        </div>
    </div>
{/define}

{define #unassociated-cookie-suggestion, $suggestion, $solutions = null, $collapseStorageName = 'unassociated'}
    <div x-data="collapse" x-bind="collapse" data-storage-name="suggestions-{$collapseStorageName}-{$projectView->id->toString()}" data-storage-key="{$suggestion->getSuggestionId()}" class="bg-white mb-2 text-sm  px-2 py-4">
        {include #suggestion-header, suggestion: $suggestion, foundInCmp: true, solutions: $solutions ?? $suggestion->getSolutions()}

        <div x-bind="collapsePanel" x-cloak>
            {include #existing-cookie, existingCookie: $suggestion->getExistingCookies()}
            {include #occurrences-table, suggestion: $suggestion}
        </div>
    </div>
{/define}

{define #problematic-cookie-suggestion, $suggestion, $solutions = null, $collapseStorageName = 'problematic'}
    <div x-data="collapse" x-bind="collapse" data-storage-name="suggestions-{$collapseStorageName}-{$projectView->id->toString()}" data-storage-key="{$suggestion->getSuggestionId()}" class="bg-white mb-2 text-sm px-2 py-4">
        {include #suggestion-header, suggestion: $suggestion, solutions: $solutions}

        <div class="divide-y divide-red-100">
            <div n:foreach="$suggestion->getProblems() as $problem" n:class="'px-2 py-4', !$iterator->isLast() ? 'mb-2' : ''">
                <div class="text-red-700">
                    {_'problem.' . $problem->getType(), $problem->getTranslatorArgs()|noescape}
                </div>
                <div n:if="null === $solutions" class="mt-2 flex items-center flex-wrap">
                    {include #solutions, solutions: $problem->getSolutions()}
                </div>
            </div>
        </div>

        <div x-bind="collapsePanel" x-cloak>
            {include #existing-cookie, existingCookie: $suggestion->getExistingCookies()}
            {include #occurrences-table, suggestion: $suggestion}
        </div>
    </div>
{/define}

{define #unproblematic-cookie-suggestion, $suggestion, $collapseStorageName = 'unproblematic'}
    <div x-data="collapse" x-bind="collapse" data-storage-name="suggestions-{$collapseStorageName}-{$projectView->id->toString()}" data-storage-key="{$suggestion->getSuggestionId()}" class="bg-white text-sm px-2 py-4">
        {include #suggestion-header, suggestion: $suggestion}

        <div x-bind="collapsePanel" x-cloak>
            {include #existing-cookie, existingCookie: $suggestion->getExistingCookies()}
            {include #occurrences-table, suggestion: $suggestion}
        </div>
    </div>
{/define}

{define #suggestion-header, $suggestion, $foundInCmp = null, $solutions = null}
    <div>
        {var $latestOccurrence = $suggestion->getLatestOccurrence()}
        <div x-bind="collapseButton" class="flex items-center flex-nowrap justify-between hover:bg-gray-50 rounded p-2 cursor-pointer">
            <div class="flex items-start w-full">
                <div class="font-semibold mr-6 my-0.5 flex items-center flex-nowrap">
                    {if $suggestion->hasWarnings()}
                        <span x-data x-tooltip.placement.top.raw="{_tooltip.suggestion_contains_warnings}">
                            {svg 'common/exclamation-triangle.svg', class: 'h-5 w-5 text-yellow-600 mr-3'}
                        </span>
                    {/if}
                    {$suggestion->getSuggestionName()}
                </div>
                <div class="flex items-center flex-wrap">
                    <div x-data x-tooltip.placement.top.raw="{_tooltip.domain}" class="inline-flex items-center px-2 py-0.5 rounded text-xs font-medium bg-gray-100 text-gray-800 mr-2 my-0.5">{$suggestion->getSuggestionDomain()}</div>
                    <div n:if="null !== $latestOccurrence" x-data x-tooltip.placement.top.raw="{_tooltip.last_founded_at}" class="inline-flex items-center px-2 py-0.5 rounded text-xs font-medium bg-indigo-100 text-indigo-800 mr-2 my-0.5">{$latestOccurrence->lastFoundAt->setTimezone(App\Application\Localization\ApplicationDateTimeZone::get())|date: 'j.n.Y H:i:s'}</div>
                    <div n:if="false === $foundInCmp" class="inline-flex items-center px-2 py-0.5 rounded text-xs font-medium bg-yellow-100 text-yellow-800 mr-2 my-0.5">{_not_found_in_cmp}</div>
                    <div n:if="true === $foundInCmp" class="inline-flex items-center px-2 py-0.5 rounded text-xs font-medium bg-green-100 text-green-800 mr-2 my-0.5">{_found_in_cmp}</div>
                </div>
            </div>
            <span class="text-gray-600">
                {svg 'common/chevron-up.svg', class: 'w-4 h-4', x-show: 'expanded', x-cloak: true}
                {svg 'common/chevron-down.svg', class: 'w-4 h-4', x-show: '!expanded', x-cloak: true}
            </span>
        </div>
        <div n:if="null !== $solutions" class="mt-2 flex items-center flex-wrap">
            {include #solutions, solutions: $solutions}
        </div>
    </div>
{/define}

{define #solutions, $solutions}
    {var $dataForResolving = $solutions->getDataForResolving() ?? []}

    <div class="flex items-center flex-wrap w-full">
        <div class="inline-flex items-center flex-wrap">
            {foreach $solutions->all() as $solution}
                {if $solution instanceof App\Application\CookieSuggestion\Solution\SolutionGroup && 1 === count($solution->getSolutions())}
                    {do $solution = $solution->getSolutions()[0]}
                {/if}

                {if $solution instanceof App\Application\CookieSuggestion\Solution\SolutionGroup}
                    {default $selectedSolutionInGroup = null}

                    {foreach $solution->getSolutions() as $solutionInGroup}
                        {if $solutionInGroup->getUniqueId() === ($dataForResolving['solutionUniqueId'] ?? '')}
                            {var $selectedSolutionInGroup = $solutionInGroup}
                        {/if}
                    {/foreach}

                    <div x-data="dropdown" x-bind="dropdown" class="relative inline-block text-left">
                        <div>
                            <button x-bind="dropdownButton" type="button" n:class="
                                'inline-flex items-center flex-nowrap rounded bg-white px-2 py-1 text-sm text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 hover:bg-gray-50 mt-1',
                                null !== $selectedSolutionInGroup ? 'ring-indigo-500',
                                $iterator->isLast() ? 'mr-3' : 'mr-1'
                            ">
                                {_'solution_group.' . $solution->getName()|noescape}
                                <span class="ml-2">
                                    {svg 'common/chevron-up.svg', class: 'w-3 h-3', x-show: 'open', x-cloak: true}
                                    {svg 'common/chevron-down.svg', class: 'w-3 h-3', x-show: '!open', x-cloak: true}
                                </span>
                            </button>
                        </div>

                        <div x-bind="dropdownPanel" x-cloak class="origin-top-left absolute mt-2 w-full w-80 rounded-md shadow-lg py-1 bg-white ring-1 ring-black ring-opacity-5 focus:outline-none" role="menu" aria-orientation="vertical" tabindex="-1">
                            <div class="mx-1 px-3 py-2 text-gray-500 border-b border-gray-150 mb-2">{_'solution_group_description.' . $solution->getName()|noescape}:</div>
                            <a
                                n:foreach="$solution->getSolutions() as $solutionInGroup"
                                n:href="solution! (expand) $solutions->getSolutionArguments($solutionInGroup)"
                                data-spinner-for="self"
                                n:class="
                                    'ajax flex items-center flex-wrap mx-1 px-3 py-2 text-sm text-gray-900 rounded ',
                                    $solutionInGroup === $selectedSolutionInGroup ? 'bg-indigo-50' : 'hover:bg-gray-50 active:bg-gray-50 focus:bg-gray-50',
                                "
                            >
                                {_'solution_in_group.' . $solutionInGroup->getType(), $solutionInGroup->getTranslatorArgs()|noescape}
                            </a>
                        </div>
                    </div>
                {else}
                    <a
                        n:href="solution! (expand) $solutions->getSolutionArguments($solution)"
                        data-spinner-for="self"
                        n:class="
                            'ajax rounded bg-white px-2 py-1 text-sm text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 hover:bg-gray-50 mt-1',
                            $solution->getUniqueId() === ($dataForResolving['solutionUniqueId'] ?? '') ? 'ring-indigo-500',
                            $iterator->isLast() ? 'mr-3' : 'mr-1'
                        "
                    >
                        {_'solution.' . $solution->getType(), $solution->getTranslatorArgs()|noescape}
                    </a>
                {/if}
            {/foreach}
            <div class="inline-flex items-center flex-nowrap">
                <a n:if="!empty($dataForResolving)" n:href="resolve! (expand) $dataForResolving" data-spinner-for="self" class="ajax flex items-center rounded bg-white px-2 py-1 text-sm text-green-700 shadow-sm ring-1 ring-inset ring-green-700 hover:bg-gray-50 mr-1 mt-1">
                    {svg 'common/check-circle.svg', class: 'h-5 w-5 text-green-700 mr-2'}
                {_resolve_suggestion}
                </a>

                <a n:if="!empty($dataForResolving)" n:href="resetSolution! solutionsUniqueId: $dataForResolving['solutionsUniqueId']" data-spinner-for="self" class="ajax flex items-center rounded bg-white px-2 py-1 text-sm text-red-600 shadow-sm ring-1 ring-inset ring-red-600 hover:bg-gray-50 mr-1 mt-1">
                    {svg 'common/x-circle.svg', class: 'h-5 w-5 text-red-600 mr-2'}
                {_reset_solution}
                </a>
            </div>
        </div>
    </div>
{/define}

{define #occurrences-table, $suggestion}
    <div class="p-2 mt-5">
        <h4 class="py-2 rounded font-semibold text-gray-600">{_caption.occurrences}</h4>
        <div class="overflow-auto max-h-[400px]">
            <table class="w-full divide-y divide-gray-300">
                <thead>
                    <tr>
                        <td class="pr-2 py-4 text-sm font-medium text-gray-500 text-left whitespace-nowrap">{_occurrences_table.scanerio_name}</td>
                        <td class="px-2 py-4 text-sm font-medium text-gray-500 text-left whitespace-nowrap">{_occurrences_table.cookie_name}</td>
                        <td class="px-2 py-4 text-sm font-medium text-gray-500 text-left whitespace-nowrap">{_occurrences_table.last_found_at}</td>
                        <td class="px-2 py-4 text-sm font-medium text-gray-500 text-left whitespace-nowrap">{_occurrences_table.accepted_categories}</td>
                        <td class="pl-2 py-4 text-sm font-medium text-gray-500 text-left whitespace-nowrap">{_occurrences_table.found_on_url}</td>
                    </tr>
                </thead>
                <tbody class="divide-y divide-gray-200">
                    <tr n:if="0 >= count($suggestion->getOccurrences())">
                        <td class="py-2" colspan="5">{_occurrences_table.no_occurrences_found}</td>
                    </tr>
                    <tr n:foreach="$suggestion->getOccurrences() as $occurrence">
                        <td class="py-2 pr-2 whitespace-nowrap">{$occurrence->scenarioName}</td>
                        <td class="py-2 px-2 whitespace-nowrap">{$occurrence->cookieName}</td>
                        <td class="py-2 px-2 whitespace-nowrap">{$occurrence->lastFoundAt|date: 'j.n.Y H:i:s'}</td>
                        <td class="py-2 px-2 whitespace-nowrap">
                            <div n:foreach="$occurrence->acceptedCategories as $categoryCode" class="inline-flex items-center px-2 py-0.5 rounded text-xs font-medium bg-gray-100 text-gray-800 mr-2 my-0.5">{$categoryCode}</div>
                        </td>
                        <td class="py-2 pl-2 whitespace-nowrap">
                            <a href="{$occurrence->foundOnUrl}" target="_blank" class="text-indigo-700">{$occurrence->foundOnUrl}</a>
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
    </div>
{/define}

{define #existing-cookie, $existingCookie}
    {var $items = is_array($existingCookie) ? $existingCookie : [$existingCookie]}

    <div class="p-2 mt-5">
        <h4 class="py-2 rounded font-semibold text-gray-600">{_caption.existing_cookie}</h4>
        <table class="w-full divide-y divide-gray-300">
            <thead>
                <tr>
                    <td class="pr-2 py-4 text-sm font-medium text-gray-500 text-left whitespace-nowrap">{_existing_cookie_table.name}</td>
                    <td class="px-2 py-4 text-sm font-medium text-gray-500 text-left whitespace-nowrap">{_existing_cookie_table.domain}</td>
                    <td class="px-2 py-4 text-sm font-medium text-gray-500 text-left whitespace-nowrap">{_existing_cookie_table.category}</td>
                    <td class="px-2 py-4 text-sm font-medium text-gray-500 text-left whitespace-nowrap">{_existing_cookie_table.provider}</td>
                    <td class="pl-2 py-4 text-sm font-medium text-gray-500 text-left whitespace-nowrap"></td>
                </tr>
            </thead>
            <tbody>
                {var $last = false}
                {foreach $items as $item}
                    <tr n:class="!$iterator->isLast() && empty($item->warnings) ? 'border-b border-gray-200'">
                        {do $last = $iterator->isLast()}
                        <td class="py-2 pr-2 whitespace-nowrap">{$item->cookieName}</td>
                        <td class="py-2 px-2 whitespace-nowrap">{$item->cookieDomain}</td>
                        <td class="py-2 px-2 whitespace-nowrap">{$item->categoryCode}</td>
                        <td class="py-2 px-2 whitespace-nowrap">{$item->providerName}</td>
                        <td class="py-2 pl-2 whitespace-nowrap">
                            <a n:href="'openModal!', modal: 'editCookieModal-' . Ramsey\Uuid\Uuid::fromString($item->cookieId)->getHex()->toString()" data-spinner-for="self" class="ajax spinner-white inline-flex items-center px-2 py-1 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
                                {_edit_cookie}
                            </a>
                        </td>
                    </tr>
                    <tr n:foreach="$item->warnings as $warning" n:class="!$last && $iterator->isLast() ? 'border-b border-gray-200'">
                        <td colspan="5" class="pb-2 text-yellow-600">{_'warning.' . $warning->getMessage()}</td>
                    </tr>
                {/foreach}
            </tbody>
        </table>
    </div>
{/define}

{define #warnings, $suggestion}
    {if 0 < count($suggestion->getWarnings())}
        <div class="p-2 mt-5">
            <h4 class="py-2 rounded font-semibold text-yellow-600">{_caption.warnings}</h4>
            <div n:foreach="$suggestion->getWarnings() as $warning" class="text-yellow-600 mb-2">{_'warning.' . $warning->getMessage()}</div>
        </div>
    {/if}
{/define}
